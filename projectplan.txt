WEB SECURITY

การเก็บรหัสผ่าน:
เว็บไซต์ที่มีความปลอดภัยสูงจะไม่เก็บรหัสผ่านในรูปแบบ plaintext จะใช้การแฮช (hash) และ salt เพื่อเพิ่มความปลอดภัย
ควรใช้ฟังก์ชันแฮชที่มีความปลอดภัยสูงเช่น bcrypt, argon2

การป้องกัน CSRF:
ใช้ token ในฟอร์มเพื่อป้องกันการโจมตีแบบ CSRF (Cross-Site Request Forgery)
Flask-WTF สามารถใช้ในการจัดการ CSRF

การตรวจสอบ session:
เก็บ session ในฐานข้อมูลหรือตัวเก็บข้อมูลอื่นๆ ที่มีความปลอดภัยสูง เช่น Redis
ตรวจสอบ session ที่หมดอายุ

การป้องกัน brute force:
ใช้ฟังก์ชันที่จำกัดจำนวนครั้งในการลองล็อกอินผิด
ใช้ reCAPTCHA เพื่อเพิ่มความปลอดภัย

การใช้ HTTPS:
บังคับใช้ HTTPS ในการเข้าถึงเว็บไซต์เพื่อเพิ่มความปลอดภัยในการส่งข้อมูล

